version: '3.7'

services:
  #
  # frontend
  #
  taiga-frontend:
    image: takumi/taiga-frontend:latest
    hostname: taiga-frontend
    container_name: taiga-frontend
    restart: always
    # cap_add:
    #   - CHOWN
    #   - SETUID
    #   - SETGID
    #   - FOWNER
    # cap_drop:
    #   - ALL
    networks:
      - taiga
    ports:
      - 8000:80
    depends_on:
      - taiga-events
      - taiga-backend
    volumes:
      - taiga-backend-data:/taiga-backend:ro
    environment:
      - SITE_LISTEN_HOST=${SITE_LISTEN_HOST}
      - BACKEND_SERVER_FROM_EMAIL=${BACKEND_SERVER_FROM_EMAIL}
      - BACKEND_DEFAULT_FROM_EMAIL=${BACKEND_DEFAULT_FROM_EMAIL}
      - BACKEND_FEEDBACK_FROM_EMAIL=${BACKEND_FEEDBACK_FROM_EMAIL}
    env_file:
      - ./prod.env

  #
  # events
  #
  taiga-events:
    image: takumi/taiga-events:latest
    hostname: taiga-events
    container_name: taiga-events
    restart: always
    # cap_drop:
    #   - ALL
    networks:
      - taiga
    depends_on:
      - taiga-rabbitmq
    environment:
      - SITE_LISTEN_HOST=${SITE_LISTEN_HOST}
      - BACKEND_SERVER_FROM_EMAIL=${BACKEND_SERVER_FROM_EMAIL}
      - BACKEND_DEFAULT_FROM_EMAIL=${BACKEND_DEFAULT_FROM_EMAIL}
      - BACKEND_FEEDBACK_FROM_EMAIL=${BACKEND_FEEDBACK_FROM_EMAIL}
    env_file:
      - ./prod.env

  #
  # backend
  #
  taiga-backend:
    image: takumi/taiga-backend:alpine
    hostname: taiga-backend
    container_name: taiga-backend
    restart: always
    # cap_add:
    #   - CHOWN
    #   - SETUID
    #   - SETGID
    # cap_drop:
    #   - ALL
    networks:
      - taiga
    depends_on:
      - taiga-postgres
      - taiga-memcached
      - taiga-rabbitmq
      - taiga-redis
    volumes:
      - taiga-backend-data:/taiga-backend/volume
    environment:
      - SITE_LISTEN_HOST=${SITE_LISTEN_HOST}
      - BACKEND_SERVER_FROM_EMAIL=${BACKEND_SERVER_FROM_EMAIL}
      - BACKEND_DEFAULT_FROM_EMAIL=${BACKEND_DEFAULT_FROM_EMAIL}
      - BACKEND_FEEDBACK_FROM_EMAIL=${BACKEND_FEEDBACK_FROM_EMAIL}
    env_file:
      - ./prod.env

  #
  # postgres
  #
  taiga-postgres:
    image: postgres:9-alpine
    hostname: taiga-postgres
    container_name: taiga-postgres
    restart: always
    # cap_add:
    #   - CHOWN
    #   - SETUID
    #   - SETGID
    #   - FOWNER
    # cap_drop:
    #   - ALL
    # security_opt:
    #   - apparmor:unconfined
    networks:
      - taiga
    volumes:
      - taiga-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=taiga
      - POSTGRES_USER=taiga
      - POSTGRES_PASSWORD=taiga
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C

  #
  # memcached
  #
  taiga-memcached:
    image: memcached:alpine
    hostname: taiga-memcached
    container_name: taiga-memcached
    # cap_drop:
    #   - ALL
    networks:
      - taiga

  #
  # rabbitmq
  #
  taiga-rabbitmq:
    image: rabbitmq:alpine
    hostname: taiga-rabbitmq
    container_name: taiga-rabbitmq
    restart: always
    # cap_add:
    #   - CHOWN
    #   - SETUID
    #   - SETGID
    # cap_drop:
    #   - ALL
    networks:
      - taiga
    volumes:
      - taiga-rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=taiga
      - RABBITMQ_DEFAULT_PASS=taiga
      - RABBITMQ_DEFAULT_VHOST=taiga

  #
  # redis
  #
  taiga-redis:
    image: redis:alpine
    hostname: taiga-redis
    container_name: taiga-redis
    restart: always
    # cap_add:
    #   - CHOWN
    #   - SETUID
    #   - SETGID
    # cap_drop:
    #   - ALL
    networks:
      - taiga

networks:
  taiga:
volumes:
  taiga-backend-data:
  taiga-postgres-data:
  taiga-rabbitmq-data:
